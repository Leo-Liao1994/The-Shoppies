{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/songliao/The-Shoppies/src/App.js\";\nimport './App.css';\nimport { React, Component } from \"react\";\nimport Alert from 'react-bootstrap/Button';\nimport Search from \"./Search/Search\";\nimport Nomination from \"./Nomination/Nomination\";\nimport SearchResult from \"./SearchResult/SearchResult\";\nimport NoResult from \"./SearchResult/NoResult\";\nimport List from \"./Nomination/List\";\nimport axios from 'axios';\nconst API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: \"\",\n      message: ['Start searching!', 'No result found!'],\n      result: [],\n      nomination: [],\n      showAlert: false\n    };\n\n    this.inputHandler = event => {\n      let nominationTitle = [];\n      let moviesResult = [];\n      axios.get(`https://www.omdbapi.com/?s=${event.target.value}&apikey=${API_KEY}`).then(res => {\n        this.state.nomination.forEach(element => nominationTitle.push(element.Title));\n        this.setState({\n          userInput: `Search result for \"${event.target.value}\":`\n        });\n\n        if (res.data.Search !== undefined) {\n          for (let movies of res.data.Search.slice(0, 6)) {\n            if (nominationTitle.indexOf(movies.Title) === -1) {\n              movies.nominated = false;\n            } else {\n              movies.nominated = true;\n            }\n\n            moviesResult.push(movies);\n          }\n\n          this.setState({\n            result: moviesResult\n          });\n        }\n      });\n    };\n\n    this.nominateHandler = index => {\n      const nomination = [...this.state.nomination];\n      nomination.push(this.state.result[index]);\n      this.setState({\n        nomination: nomination\n      });\n\n      if (this.state.nomination.length >= 4) {\n        this.setState({\n          showAlert: true\n        });\n      }\n    };\n\n    this.removeNominationHandler = index => {\n      const nomination = [...this.state.nomination];\n      nomination.splice(index, 1);\n      this.setState({\n        nomination: nomination\n      });\n\n      if (this.state.nomination.length <= 5) {\n        this.setState({\n          showAlert: false\n        });\n      }\n    };\n  }\n\n  render() {\n    let results = null;\n    let search = null;\n    let nominateList = null;\n    let nominationTitle = [];\n    this.state.nomination.forEach(element => nominationTitle.push(element.Title));\n\n    const resultState = (result, index) => {\n      if (result.Title !== \"\") {\n        return /*#__PURE__*/_jsxDEV(SearchResult, {\n          id: result.imdbID,\n          title: result.Title,\n          year: `(${result.Year})`,\n          nominated: nominationTitle.indexOf(result.Title) === -1 ? false : true,\n          nominate: () => this.nominateHandler(index),\n          maxLimit: this.state.nomination.length >= 5 ? true : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this);\n      }\n    };\n\n    const nominationState = (list, index) => {\n      return /*#__PURE__*/_jsxDEV(List, {\n        id: list.imdbID,\n        nominateTitle: list.Title,\n        removeNomination: () => this.removeNominationHandler(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }, this);\n    };\n\n    nominateList = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.nomination.map(nominationState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n\n    if (this.state.userInput.length >= 24 && this.state.result.length > 0) {\n      search = /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"result_for\",\n        children: [\" \", this.state.userInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 8\n      }, this);\n      results = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.result.map(resultState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this);\n    } else if (this.state.result.length === 0) {\n      results = /*#__PURE__*/_jsxDEV(NoResult, {\n        message: this.state.message[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }, this);\n    } else results = /*#__PURE__*/_jsxDEV(NoResult, {\n      message: this.state.message[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 24\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Nomination, {\n        list: nominateList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        input: this.inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), search, this.state.showAlert ? /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"alert\",\n        variant: \"success\",\n        children: \"You have reached the maximum number of nomination! Thank you!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this) : null, results]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/songliao/The-Shoppies/src/App.js"],"names":["React","Component","Alert","Search","Nomination","SearchResult","NoResult","List","axios","API_KEY","process","env","REACT_APP_OMDB_API_KEY","App","state","userInput","message","result","nomination","showAlert","inputHandler","event","nominationTitle","moviesResult","get","target","value","then","res","forEach","element","push","Title","setState","data","undefined","movies","slice","indexOf","nominated","nominateHandler","index","length","removeNominationHandler","splice","render","results","search","nominateList","resultState","imdbID","Year","nominationState","list","map"],"mappings":"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","sourcesContent":["import './App.css';\nimport { React, Component } from \"react\"\nimport Alert from 'react-bootstrap/Button'\nimport  Search from \"./Search/Search\";\nimport  Nomination from \"./Nomination/Nomination\";\nimport  SearchResult from \"./SearchResult/SearchResult\";\nimport  NoResult from \"./SearchResult/NoResult\";\nimport  List from \"./Nomination/List\";\nimport axios from 'axios';\n\nconst API_KEY = process.env.REACT_APP_OMDB_API_KEY;\n\n\nclass App extends Component  {\nstate = {\n  userInput: \"\",\n  message: ['Start searching!', 'No result found!'],\n  result: [], \n  nomination : [],\n  showAlert: false\n}\n\n\n\ninputHandler = (event) => {\nlet nominationTitle= [];\nlet moviesResult = [];\n  axios.get(`https://www.omdbapi.com/?s=${event.target.value}&apikey=${API_KEY}`) \n  .then(res => {\n\n    this.state.nomination.forEach(element => nominationTitle.push(element.Title))\n\n    this.setState({userInput: `Search result for \"${event.target.value}\":`})\n    if(res.data.Search !== undefined){\n      for(let movies of res.data.Search.slice(0,6)) {\n      if(nominationTitle.indexOf(movies.Title) === -1){\n        movies.nominated = false;\n        } else {\n          movies.nominated = true;\n        }\n        moviesResult.push(movies);\n       }\n      this.setState( \n        {result: moviesResult}); \n    } \n  })\n}\n\nnominateHandler = (index) => {\n   const nomination= [...this.state.nomination]; \n   nomination.push(this.state.result[index])\n   this.setState({nomination: nomination}) \n   if(this.state.nomination.length >= 4) {\n    this.setState({showAlert: true})\n   } \n  }\n\nremoveNominationHandler = (index) => {\n  const nomination= [...this.state.nomination]; \n  nomination.splice(index,1)\n  this.setState({nomination: nomination}) \n  if(this.state.nomination.length <= 5) {\n    this.setState({showAlert: false})\n   } \n}\n\nrender (){\n\n  let results = null; \n  let search = null; \n  let nominateList = null; \n  let nominationTitle= []\n\n  this.state.nomination.forEach(element => nominationTitle.push(element.Title))\n\n      const resultState = (result,index) => {\n        if(result.Title !== \"\") {\n        return <SearchResult\n        id = {result.imdbID}\n        title = {result.Title}\n        year = {`(${result.Year})`} \n        nominated = {nominationTitle.indexOf(result.Title) === -1 ? false : true}\n        nominate = {() => this.nominateHandler(index)}\n        maxLimit = {this.state.nomination.length >= 5? true : false}\n        /> \n        }  \n      }\n\n      const nominationState = (list, index) => {\n        return <List \n        id = {list.imdbID}\n        nominateTitle = {list.Title}\n        removeNomination = {() => this.removeNominationHandler(index)}\n        />  \n      }\n\n      nominateList = ( \n      <div >\n        {this.state.nomination.map(nominationState)}\n      </div>)\n      \n      \n\n      if( this.state.userInput.length >= 24 && this.state.result.length > 0) {\n       search = (\n       <h5 className = \"result_for\" > {this.state.userInput}</h5>)\n\n      results = (\n          <div >\n            {this.state.result.map(resultState)}\n          </div> \n      )} else if (this.state.result.length === 0) {\n        results = <NoResult message = {this.state.message[1]}></NoResult>\n      } else results = <NoResult message = {this.state.message[0]}></NoResult>\n\n \n  return (\n  <div className=\"App\">\n     <Nomination \n    list = {nominateList}\n    >\n    </Nomination>\n    <Search \n    input = {this.inputHandler} \n    ></Search>\n    {search}\n    { this.state.showAlert? \n    <Alert className = 'alert' variant='success' >\n    You have reached the maximum number of nomination! Thank you! \n    </Alert> : null\n    }\n    {results}\n  </div>\n  );\n  } \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}